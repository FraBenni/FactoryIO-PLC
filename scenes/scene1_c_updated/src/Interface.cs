// TODO autogenerated

using System;
using System.Runtime.InteropServices;

using EngineIO;

[StructLayout(LayoutKind.Explicit)]
public struct iec_type_t
{
    [FieldOffset(0)] public System.Byte iec_uint8;
    [FieldOffset(0)] public System.UInt16 iec_uint16;
    [FieldOffset(0)] public System.UInt32 iec_uint32;
    [FieldOffset(0)] public System.UInt64 iec_uint64;

    [FieldOffset(0)] public System.SByte iec_int8;
    [FieldOffset(0)] public System.Int16 iec_int16;
    [FieldOffset(0)] public System.Int32 iec_int32;
    [FieldOffset(0)] public System.Int64 iec_int64;

    [FieldOffset(0)] public System.Single iec_single;
    [FieldOffset(0)] public System.Double iec_double;
}

public class Interface
{
    // TODO consider making the dll imports all private rather than public

    // ===== DLL imports ===== //
    [DllImport("./interface.dll")]
    public static extern void init_variables();

    [DllImport("./interface.dll")]
    public static extern iec_type_t read_variable(ulong type, ulong idx);

    [DllImport("./interface.dll")]
    public static extern void set_variable(iec_type_t input, ulong type, ulong idx);

    [DllImport("./interface.dll")]
    public static extern void config_run();

    // ===== Factory I/O variables ===== //
    public MemoryBit Conveyor;
    public MemoryBit Sensor;

    public Interface()
    {
        Conveyor = MemoryMap.Instance.GetBit("Conveyor", MemoryType.Output);
        Sensor = MemoryMap.Instance.GetBit("Sensor", MemoryType.Input);

        init_variables();
    }

    public void PLCCycle()
    {
        ReadInputs();
        config_run();
        SetOutputs();
    }

    private void ReadInputs()
    {
        iec_type_t iec_type = new iec_type_t();

        // Sensor
        iec_type.iec_uint8 = Sensor.Value ? (byte)1 : (byte)0;
        set_variable(iec_type, 0, 0);
    }

    private void ConfigRun()
    {
        config_run();
    }

    private void SetOutputs()
    {
        iec_type_t iec_type = new iec_type_t();

        // Conveyor
        iec_type = read_variable(0, 0);
        Conveyor.Value = (iec_type.iec_uint8 == 1) ? true : false;
    }

    // TODO create an enumeration for all the different types
    //      and create an encoder/decoder that automatically gets the right value

}
